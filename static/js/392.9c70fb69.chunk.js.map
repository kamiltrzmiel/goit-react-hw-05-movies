{"version":3,"file":"static/js/392.9c70fb69.chunk.js","mappings":"iNACA,EAA2B,uBAA3B,EAA6D,uB,SC4C7D,EAxCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,IARAE,EAAAA,EAAAA,YAAU,WACHF,IAELG,EAAAA,EAAAA,IAAcH,GAASI,MAAK,SAAAN,GAC1BC,EAAQD,EACT,GACF,GAAE,CAACE,IAECF,EAEL,OACE,+BACE,eAAIO,UAAWC,EAAf,SACGR,GACCA,EAAKS,KAAI,SAAAC,GACP,OACE,gBAAIH,UAAWC,EAAf,UACGE,EAAKC,eACJ,gBACEC,IAAG,yCAAoCF,EAAKC,cAC5CE,IAAKH,EAAKI,KACVC,MAAM,MACNC,QAAQ,UAGZ,uBAAIN,EAAKI,QACT,0BACA,0BAAM,eAAiB,IAAEJ,EAAKO,eAXEP,EAAKQ,GAe1C,OAIV,C,sLCzCKC,E,OAAYC,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAmB,mCAAG,6GAERL,EAAUM,IAAI,sBAAuB,CAC1DH,OAAQ,CAAEI,eAAe,KAHI,cAEzBC,EAFyB,yBAKxBA,EAASC,KAAKC,SALU,yDAOxB,KAAMC,SAPkB,yDAAH,qDAWnBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENb,EAAUM,IAAV,gBAA+B,CACpDH,OAAQ,CAAEW,SAAU,QAASC,KAAM,EAAGR,eAAe,EAAOM,MAAAA,KAHjC,cAEvBL,EAFuB,yBAKtBA,EAASC,MALa,yDAOtB,KAAME,SAPgB,yDAAH,sDAWjBK,EAAiB,mCAAG,WAAMC,GAAN,gGAENjB,EAAUM,IAAV,iBAAwBW,GAAY,CACzDd,OAAQ,CAAEW,SAAU,WAHO,cAEvBN,EAFuB,yBAKtBA,EAASC,MALa,yDAOtB,KAAME,SAPgB,yDAAH,sDAWjBzB,EAAa,mCAAG,WAAM+B,GAAN,gGAEFjB,EAAUM,IAAV,iBAAwBW,EAAxB,YAA4C,CACjEd,OAAQ,CAAEW,SAAU,WAHG,cAEnBN,EAFmB,yBAKlBA,EAASC,KAAK5B,MALI,yDAOlB,KAAM8B,SAPY,yDAAH,sDAWbO,EAAgB,mCAAG,WAAMD,GAAN,gGAELjB,EAAUM,IAAV,iBAAwBW,EAAxB,YAA4C,CACjEd,OAAQ,CAAEW,SAAU,WAHM,cAEtBN,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,yDAOrB,KAAMC,SAPe,yDAAH,qD","sources":["webpack://react-hw-05-movies/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"cast_castList__yD6XP\",\"castItem\":\"cast_castItem__w+cL7\"};","import { fetchCastById } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState('');\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n\n    fetchCastById(movieId).then(cast => {\n      setCast(cast);\n    });\n  }, [movieId]);\n\n  if (!cast) return;\n\n  return (\n    <>\n      <ul className={css.castList}>\n        {cast &&\n          cast.map(item => {\n            return (\n              <li className={css.castItem} key={item.id}>\n                {item.profile_path && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n                    alt={item.name}\n                    width=\"300\"\n                    loading='lazy'\n                  />\n                )}\n                <p>{item.name}</p>\n                <p>\n                <span>Character:</span> {item.character}\n                </p>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n}\n\nexport default Cast;","import axios from 'axios';\n\nconst api_query = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e56bac74c49b45071b964a5f7a0906aa',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await api_query.get('/trending/movie/day', {\n      params: { include_adult: false },\n    });\n    return response.data.results;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchMovieByTitle = async query => {\n  try {\n    const response = await api_query.get(`/search/movie`, {\n      params: { language: 'en-US', page: 1, include_adult: false, query },\n    });\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  try {\n    const response = await api_query.get(`/movie/${movie_id}`, {\n      params: { language: 'en-US' },\n    });\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchCastById = async movie_id => {\n  try {\n    const response = await api_query.get(`/movie/${movie_id}/credits`, {\n      params: { language: 'en-US' },\n    });\n    return response.data.cast;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchReviewsById = async movie_id => {\n  try {\n    const response = await api_query.get(`/movie/${movie_id}/reviews`, {\n      params: { language: 'en-US' },\n    });\n    return response.data.results;\n  } catch (error) {\n    return error.message;\n  }\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchCastById","then","className","css","map","item","profile_path","src","alt","name","width","loading","character","id","api_query","axios","baseURL","params","api_key","fetchTrendingMovies","get","include_adult","response","data","results","message","fetchMovieByTitle","query","language","page","fetchMovieDetails","movie_id","fetchReviewsById"],"sourceRoot":""}