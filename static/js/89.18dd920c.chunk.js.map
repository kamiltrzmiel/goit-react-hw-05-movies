{"version":3,"file":"static/js/89.18dd920c.chunk.js","mappings":"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","sources":["webpack://react-hw-05-movies/./src/pages/MovieDetails/movieDetails.module.css?c148","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"movieDetails_wrapper__s3VPh\",\"container\":\"movieDetails_container__0I5or\",\"title\":\"movieDetails_title__SN6Ns\",\"backButton\":\"movieDetails_backButton__Kya5X\"};","import { fetchMovieDetails } from 'services/api';\nimport { lazy, Suspense, useEffect, useState } from 'react';\nimport { Link, NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from './movieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) return;\n    fetchMovieDetails(movieId).then(details => setMovieDetails(details));\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return;\n  }\n\n  const backLink = location.state?.from ?? '/movies';\n\n  return (\n    <main>\n      <button className={css.backButton}>\n        <Link to={backLink}>Go back</Link>\n      </button>\n      <div className={css.wrapper}>\n        {movieDetails && (\n          <div className={css.container}>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n                alt={movieDetails.title}\n                loading={lazy}\n              />\n            </div>\n            <div>\n              <div className={css.title}>\n                <h2>{movieDetails.title}</h2>\n                <p>({parseInt(movieDetails.release_date)})</p>\n              </div>\n              <p>\n                User Score: {`${movieDetails.vote_average.toFixed(2)} | 10`}\n              </p>\n              <h3>Overview</h3>\n              <p>{`${movieDetails.overview}`}</p>\n              <h3>Genres</h3>\n              <p>{`${movieDetails.genres\n                .map(genre => genre.name)\n                .join(' / ')}`}</p>\n            </div>\n          </div>\n        )}\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <NavLink\n              style={({ isActive }) => ({\n                color: isActive ? '#b92121' : 'inherit',\n              })}\n              to=\"cast\"\n              state={{ from: backLink }}\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              style={({ isActive }) => ({\n                color: isActive ? '#b92121' : 'inherit',\n              })}\n              to=\"reviews\"\n              state={{ from: backLink }}\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </main>\n  );\n}\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst api_query = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e56bac74c49b45071b964a5f7a0906aa',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await api_query.get('/trending/movie/day', {\n      params: { include_adult: false },\n    });\n    return response.data.results;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchMovieByTitle = async query => {\n  try {\n    const response = await api_query.get(`/search/movie`, {\n      params: { language: 'en-US', page: 1, include_adult: false, query },\n    });\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  try {\n    const response = await api_query.get(`/movie/${movie_id}`, {\n      params: { language: 'en-US' },\n    });\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchCastById = async movie_id => {\n  try {\n    const response = await api_query.get(`/movie/${movie_id}/credits`, {\n      params: { language: 'en-US' },\n    });\n    return response.data.cast;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchReviewsById = async movie_id => {\n  try {\n    const response = await api_query.get(`/movie/${movie_id}/reviews`, {\n      params: { language: 'en-US' },\n    });\n    return response.data.results;\n  } catch (error) {\n    return error.message;\n  }\n};\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","useEffect","fetchMovieDetails","then","details","backLink","state","from","className","css","to","src","poster_path","alt","title","loading","lazy","parseInt","release_date","vote_average","toFixed","overview","genres","map","genre","name","join","style","color","isActive","Suspense","fallback","api_query","axios","baseURL","params","api_key","fetchTrendingMovies","get","include_adult","response","data","results","message","fetchMovieByTitle","query","language","page","movie_id","fetchCastById","cast","fetchReviewsById"],"sourceRoot":""}